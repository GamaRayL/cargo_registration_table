version: '3'

services:
  backend:
    build:
      context: ./backend/
    tty: true
    command: bash -c '
      python3 manage.py migrate
      && python3 manage.py loaddata shipments/initial_data.json
      && python3 manage.py runserver 0.0.0.0:8000
      '
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    networks:
      - mynetwork

  frontend:
    build:
      context: ./frontend/
    ports:
      - "5173:5173"
    command: npm run dev
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    networks:
      - mynetwork

  db:
    image: postgres
    env_file:
      - ./backend/.env
    volumes:
      - pg_data:/var/lib/postgres/data/pg_data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  pg_data: